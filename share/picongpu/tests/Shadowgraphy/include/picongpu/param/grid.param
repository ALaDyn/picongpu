/* Copyright 2013-2022 Axel Huebl, Rene Widera, Benjamin Worpitz, Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */


#pragma once

namespace picongpu
{
    namespace SI
    {
        /** This setup is based on section 7.11.1 of
         *  A. Taflove, S.C. Hagness. Computational Electrodynamics
         *  The Finite-Difference Time-Domain Method. 3rd Edition.
         *  The difference is we consider both 2D and 3D cases,
         *  and grid size is increased due to our absorber being part of
         *  the simulation area, not located outside of it as in the book.
         */

        /** equals X
         *  unit: meter */
        constexpr float_64 CELL_WIDTH_SI = 40e-8;
        /** equals Y
         *  unit: meter */
        constexpr float_64 CELL_HEIGHT_SI = 40e-8;
        /** equals Z
         *  unit: meter
         * resolves the pulse wavelength 40 times */
        constexpr float_64 CELL_DEPTH_SI = 2e-8;

        /** Duration of one timestep is just below the CFL limit
         *  unit: seconds */
        constexpr float_64 DELTA_T_SI = 6.621392653093993e-17;

    } // namespace SI
} // namespace picongpu
